<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Pasien_model extends CI_Model
{
    var $table = 'pasien';
    var $column_order = array('id', 'nama_pasien', 'jns_kelamin', 'tgl_masuk', 'tgl_keluar', 'jns_kamar', 'jns_penyakit', 'alamat', 'no_tlp', null, null);
    var $column_search = array('id', 'nama_pasien', 'jns_kelamin', 'tgl_masuk', 'tgl_keluar', 'jns_kamar', 'jns_penyakit', 'alamat', 'no_tlp');
    var $order = array('nama_pasien' => 'asc');
    
    function __construct()
    {
        parent::__construct();
        $this->load->database();
    }
    
    /*
     * Get pasien by id
     */
    function get_pasien($id)
    {
        return $this->db->get_where('pasien',array('id'=>$id))->row_array();
    }
        
    /*
     * Get all pasien
     */
    function get_all_pasien()
    {
        $this->db->order_by('id', 'desc');
        return $this->db->get('pasien')->result_array();
    }
        
    /*
     * function to add new pasien
     */
    function add_pasien($params)
    {
        $this->db->insert('pasien',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update pasien
     */
    function update_pasien($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('pasien',$params);
    }
    
    /*
     * function to delete pasien
     */
    function delete_pasien($id)
    {
        return $this->db->delete('pasien',array('id'=>$id));
    }

    private function _get_datatables_query()
    {
        $this->db->select('*');
        $this->db->from('pasien');
        $this->db->join('kamar', 'kamar.id = pasien.jns_kamar', 'left');
        $this->db->join('penyakit', 'penyakit.id = pasien.jns_penyakit', 'left');
 
        $i = 0;
     
        foreach ($this->column_search as $item) // looping awal
        {
            if($_POST['search']['value']) // jika datatable mengirimkan pencarian dengan metode POST
            {
                 
                if($i===0) // looping awal
                {
                    $this->db->group_start(); 
                    $this->db->like($item, $_POST['search']['value']);
                }
                else
                {
                    $this->db->or_like($item, $_POST['search']['value']);
                }
 
                if(count($this->column_search) - 1 == $i) 
                    $this->db->group_end(); 
            }
            $i++;
        }
         
        if(isset($_POST['order'])) 
        {
            $this->db->order_by($this->column_order[$_POST['order']['0']['column']], $_POST['order']['0']['dir']);
        } 
        else if(isset($this->order))
        {
            $order = $this->order;
            $this->db->order_by(key($order), $order[key($order)]);
        }
    }

    function get_datatables()
    {
        $this->_get_datatables_query();
        if($_POST['length'] != -1)
        $this->db->limit($_POST['length'], $_POST['start']);
        $query = $this->db->get();
        return $query->result();
    }
 
    function count_filtered()
    {
        $this->_get_datatables_query();
        $query = $this->db->get();
        return $query->num_rows();
    }
 
    public function count_all()
    {
        $this->db->from($this->table);
        return $this->db->count_all_results();
    }

    public function join_table()
    {
        $this->_get_datatables_query();
        if($_POST['length'] != -1)
        $this->db->limit($_POST['length'], $_POST['start']);
        
        return $this->db->get()->result();
    }
}
